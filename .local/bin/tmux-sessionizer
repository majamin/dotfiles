#!/bin/bash

# Set default editor
EDITOR=${EDITOR:-nano}

# Initialize variables
session_name=""
working_dir=""
file=""
command=""
window_name=""

# Function to sanitize names
sanitize() {
  echo "$1" | tr -dC '[:alnum:]' | cut -c -16
}

# ---- Handle arguments ----
while getopts ":w:f:c:" opt; do
  case ${opt} in
    w )
      working_dir=$(realpath "$OPTARG")
      session_name=$(sanitize "$(basename "$working_dir")")
      ;;
    f )
      if [ -n "$command" ]; then
        echo "Error: -f (file) and -c (command) cannot be used together." >&2
        exit 1
      fi
      file=$(realpath "$OPTARG")
      window_name=$(sanitize "$(basename "$file")")
      if [ -z "$session_name" ]; then
        session_name=$(sanitize "$(basename "$(dirname "$file")")")
      fi
      if [ -z "$working_dir" ]; then
        working_dir=$(dirname "$file")
      fi
      command="$EDITOR '$file'"
      ;;
    c )
      if [ -n "$file" ]; then
        echo "Error: -f (file) and -c (command) cannot be used together." >&2
        exit 1
      fi
      command="$OPTARG"
      if [ -z "$session_name" ]; then
        session_name=$(sanitize "$(basename "$PWD")")
      fi
      if [ -z "$working_dir" ]; then
        working_dir=$(realpath "$PWD")
      fi
      ;;
    \? )
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    : )
      echo "Invalid option: -$OPTARG requires an argument" >&2
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

# Default session name if none was set
if [ -z "$session_name" ]; then
  session_name=$(sanitize "$(basename "$PWD")")
fi

# Default working directory if none was set
if [ -z "$working_dir" ]; then
  working_dir=$(realpath "$PWD")
fi

# Function to attach to a session or window
attach_tmux() {
  local target="$1"
  if [ -n "$TMUX" ]; then
    tmux switch-client -t "$target"
  else
    tmux attach-session -t "$target"
  fi
}

# Check if session exists
if tmux has-session -t "$session_name" 2>/dev/null; then
  # Session exists, create a new window with the specified window name
  if [ -z "$window_name" ]; then
    window_name=$(sanitize "$(basename "$PWD")")
  fi
  tmux new-window -n "$window_name" -t "$session_name" -c "$working_dir"
  if [ -n "$command" ]; then
    tmux send-keys -t "${session_name}:${window_name}" "$command" C-m
  fi
  attach_tmux "${session_name}:${window_name}"
else
  # Session does not exist; create it and run the command
  tmux new-session -d -s "$session_name" -c "$working_dir" -n "$window_name"
  if [ -n "$command" ]; then
    tmux send-keys -t "${session_name}:${window_name}" "$command" C-m
  fi
  attach_tmux "${session_name}:${window_name}"
fi

