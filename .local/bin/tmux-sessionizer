#!/bin/bash

# set -x

# Set editor
EDITOR=${EDITOR:-nano}

usage() {
    echo "tmux-sessionizer: Open and manage tmux sessions, files, and commands"
    echo "Usage: tmux-sessionizer [file|directory|command]"
    exit 1
}

# Home directory name
sandbox_name="sandbox"

# Function to sanitize input
sanitize_input() {
    echo "$1" | sed 's/[^a-zA-Z0-9]//g'
}

# Function to sanitize command
sanitize_command() {
    echo "$1" | sed 's/[^a-zA-Z0-9]//g' | sed 's/sudo//g' | sed 's/doas//g'
}

# Function to handle file editing
handle_file() {
    local file="$(realpath "$1")"
    dir=$(dirname "$(realpath "$file")")
    name=$(basename "$dir")
    window_name=$(sanitize_input "$(basename "$file")")
    command="$EDITOR $file"
}

# Function to handle command execution
handle_command() {
    command="$@"
    dir="$PWD"
    name=$(basename "$dir")
    window_name=$(sanitize_command "$command")
}

if [ -d "$1" ]; then
    dir="$1"
    name=$(basename "$dir")
elif [ -f "$1" ]; then
    # Argument is a file, open session in file's directory and edit file
    handle_file "$1"
else
    # Argument is assumed to be a command, execute command in new window
    handle_command "$@"
fi

# If present directory is home directory, use sandbox
if [ "$dir" = "$HOME" ]; then
    name="$sandbox_name"
fi

# If window and session already exists, attach to it and exit
if tmux has-session -t "$name:$window_name" 2>/dev/null; then
    tmux attach-session -t "$name:$window_name"
    exit
fi

# Check if session and window already exists
if ! tmux has-session -t "$name" 2>/dev/null; then
    tmux new-session -d -s "$name" -n "$window_name" -c "$dir"
fi

# Check if window already exists
if ! tmux list-windows -t "$name" | grep -q "$window_name"; then
    tmux new-window -t "$name" -n "$window_name" -c "$dir"
fi

# If command is provided, execute it
if [ -n "$command" ]; then
    tmux send-keys -t "$name:$window_name" "$command" Enter
fi

# Attach to tmux session
tmux attach-session -t "$name:$window_name"
